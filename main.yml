---
- name: Provision
  hosts: localhost
  connection: local
  gather_facts: False
  tags: provisioning
  
  vars_files:
    - variables.yml

  tasks:

    - name: Create a security group
      local_action: 
        module: ec2_group
        name: "{{ security_group }}"
        description: Security Group for Servers
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: 8080
            to_port: 8080
            cidr_ip: 0.0.0.0/0
          - proto: all
            cidr_ip: 10.0.0.0/8
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0

# This task use your local id_rsa.pub.
    - name: Create Key
      ec2_key:
        name: "{{ keypair }}"
        region: "{{ region }}"
        key_material: "{{ item }}"
      with_file: ~/.ssh/id_rsa.pub

    - name: Create ELB
      ec2_elb_lb:
        name: "{{ lb_name }}"
        region: "{{ region }}"
        zones:
          - us-east-1a
          - us-east-1c
        state: present
        listeners:
           - protocol: http
             load_balancer_port: 80
             instance_port: 8080
        health_check:
          health_check:
          ping_protocol: tcp 
          ping_port: 22
          response_timeout: 10 
          interval: 30 
          unhealthy_threshold: 10
          healthy_threshold: 10
      register: elb

    - debug: msg="{{ elb }}"

    - name: Launch the new EC2 Instance
      local_action: ec2 
                    group={{ security_group }} 
                    instance_type={{ instance_type}} 
                    image={{ image }} 
                    wait=true 
                    region={{ region }}
                    keypair={{ keypair }}
                    count={{ count }}
      register: ec2

    - name: Wait for SSH to come up
      local_action: wait_for 
                    host={{ item.public_ip }} 
                    port=22 
                    state=started
      with_items: ec2.instances

    - name: Add the newly created EC2 instance(s) to the local host group, "hosts" file
      local_action: lineinfile 
                      dest="./hosts" 
                      regexp={{ item.public_ip }} 
                      insertafter="[servers]" line={{ item.public_ip }}
      with_items: ec2.instances 

    - name: Add tag to Instance(s)
      local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
      with_items: ec2.instances
      args:
        tags:
          Name: servers

    - name: Show your instance(s) information
      debug: msg="****** Instances Public IP {{ item.public_ip }} ******"
      with_items: ec2.instances

    - name: Instance(s) Register
      local_action:
        module: ec2_elb
        region: "{{ region }}"
        instance_id: "{{ item.id }}"
        ec2_elbs: "{{ lb_name }}"
        state: present
      with_items: ec2.instances
    
    - name: Refresh inventory
      meta: refresh_inventory

- include: docker-deploy.yml